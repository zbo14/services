#user       www www;  ## Default: nobody
worker_processes  5;  ## Default: 1
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include  mime.types;
  # include  proxy.conf;
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /var/log/nginx/access.log main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server { # php/fastcgi
    listen       80;
    server_name  domain1.com www.domain1.com;
    access_log   /var/log/nginx/domain1.access.log main;
    root         /usr/share/www;

    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      if (!-f $document_root$fastcgi_script_name) {
        return 404;
      }

      # Mitigate https://httpoxy.org/ vulnerabilities
      fastcgi_param HTTP_PROXY "";

      fastcgi_pass php-fpm:9000;
      fastcgi_index index.php;

      # include the fastcgi_param setting
      include fastcgi_params;

      # SCRIPT_FILENAME parameter is used for PHP FPM determining
      #  the script name. If it is not set in fastcgi_params file,
      # i.e. /etc/nginx/fastcgi_params or in the parent contexts,
      # please comment off following line:
      # fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;
    }
  }

  # server { # simple reverse-proxy
  #   listen       80;
  #   server_name  domain2.com www.domain2.com;
  #   access_log   logs/domain2.access.log  main;

  #   # serve static files
  #   location ~ ^/(images|javascript|js|css|flash|media|static)/  {
  #     root    /var/www/virtual/big.server.com/htdocs;
  #     expires 30d;
  #   }

  #   # pass requests for dynamic content to rails/turbogears/zope, et al
  #   location / {
  #     proxy_pass      http://127.0.0.1:8080;
  #   }
  # }

  # upstream big_server_com {
  #   server 127.0.0.3:8000 weight=5;
  #   server 127.0.0.3:8001 weight=5;
  #   server 192.168.0.1:8000;
  #   server 192.168.0.1:8001;
  # }

  # server { # simple load balancing
  #   listen          80;
  #   server_name     big.server.com;
  #   access_log      logs/big.server.access.log main;

  #   location / {
  #     proxy_pass      http://big_server_com;
  #   }
  # }
}
